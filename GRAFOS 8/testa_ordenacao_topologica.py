from ordenacaotopologica import *
import unittest

class TestarOrdenacaoTopologica(unittest.TestCase):

    def setUp(self):

        # ENGENHARIA DA COMPUTAÇÃO
        self.engenhariadacomputacao = Grafo([], [])
        self.verticesengenhariadacomputacao = ['11', '12', '13', '14', '15', '16', '17',  # primeiro periodo
                                          '21', '22', '23', '24', '25', '26', '27',  # segundo periodo
                                          '31', '32', '33', '34', '35', '36',  # terceiro periodo
                                          '41', '42', '43', '44', '45',  # quarto periodo
                                          '51', '52', '53', '54', '55',  # quinto periodo
                                          '61', '62', '63', '64', '65',  # sexto periodo
                                          '71', '72', '73', '74', '75',  # setimo periodo
                                          '81', '82', '83', '84', '85',  # oitavo periodo
                                          '91', '92', '93', '94', '95',  # nono periodo
                                          '101', '102', '103']  # decimo periodo
        self.arestasengenhariadacomputacao = ['11-21', '14-24', '15-24', '14-25', '15-25', '16-26',  # segundo periodo
                                         '21-31', '24-33', '14-34', '15-34', '14-35', '15-35', '26-36', # terceiro periodo
                                         '21-41', '24-43', '24-44', '36-44', '36-45',  # quarto periodo
                                         '31-51', '31-52', '24-53', '24-54', '36-55', '44-55',  # quinto periodo
                                         '51-61', '43-62', '34-63', '35-63', '31-64', '55-65',  # sexto periodo
                                         '55-65', '24-72', '63-73', '52-75', '64-75',  # setimo periodo
                                         '34-81', '35-81', '54-81', '73-82', '74-83', '61-84', '64-84', '75-85', # oitavo periodo
                                         '83-92', '44-93', '45-93', '61-94', '75-94',  # nono periodo
                                         '92-103']  # decimo periodo
        for i in self.verticesengenhariadacomputacao:
            self.engenhariadacomputacao.adiciona_vertice(i)
        for i in self.arestasengenhariadacomputacao:
            self.engenhariadacomputacao.adiciona_aresta(i)


        # TELEMATICA
        self.telematica = Grafo([], [])
        self.vericestelematica = ['11', '12', '13', '14', '15', '16', '17',  # primeiro periodo
                             '21', '22', '23', '24', '25', '26', '27',  # segundo periodo
                             '31', '32', '33', '34', '35', '36', '37',  # terceiro periodo
                             '41', '42', '43', '44', '45', '46', '47',  # quarto periodo
                             '51', '52', '53', '54', '55', '56',  # quinto periodo
                             '61', '62', '63', '64', '65']  # sexto periodo
        self.arestastelematica = ['11-21', '12-22', '16-22', '12-23', '16-23', '13-24', '16-26',  # segundo periodo
                             '21-31', '26-32', '22-33', '23-33', '26-33', '25-34', '25-35', '21-36', '24-36',
                             # terceiro periodo
                             '31-41', '31-42', '32-43', '32-44', '33-44', '33-45', '21-46', '34-46',  # quarto periodo
                             '41-51', '41-52', '44-53', '44-54', '37-55', '41-55', '44-55',  # quinto periodo
                             '42-51', '53-62']  # sexto periodo
        for i in self.vericestelematica:
            self.telematica.adiciona_vertice(i)
        for i in self.arestastelematica:
            self.telematica.adiciona_aresta(i)


        # CONSTRUCAO DE EDIFICIOS
        self.contrucaoedificios = Grafo([], [])
        self.verticeconstrucaoedificios = ['11', '12', '13', '14', '15', '16', '17', '18',  # primeiro periodo
                                      '21', '22', '23', '24', '25', '26', '27',  # segundo periodo
                                      '31', '32', '33', '34', '35', '36', '37', '38',  # terceiro periodo
                                      '41', '42', '43', '44', '45', '46', '47',  # quarto periodo
                                      '51', '52', '53', '54', '55', '56', '57',  # quinto periodo
                                      '61', '62', '63', '64', '65', '66', '67', '68',  # sexto periodo
                                      '71']  # setimo periodo
        self.arestasconstrucaoedificios = ['15-21', '14-23', '11-24', '17-24', '15-25', '17-26', '17-27',  # segundo periodo
                                      '15-32', '21-32', '21-33', '15-34', '23-35', '26-36', '23-37', '24-38',
                                      # terceiro periodo
                                      '17-41', '21-41', '17-42', '21-42', '11-43', '23-43', '35-43', '35-45', '17-46',
                                      '32-46', '21-47',  # quarto periodo
                                      '37-51', '45-51', '46-52', '17-53', '32-53', '47-54', '17-55', '32-55', '46-56',
                                      '43-57',  # quinto periodo
                                      '31-62', '57-62', '37-64', '45-64', '22-66', '31-67', '57-67',  # sexto periodo
                                      '13-71', '22-71']  # setiomo periodo
        for i in self.verticeconstrucaoedificios:
            self.contrucaoedificios.adiciona_vertice(i)
        for i in self.arestasconstrucaoedificios:
            self.contrucaoedificios.adiciona_aresta(i)

        # MATEMATICA
        self.matematica = Grafo([], [])
        self.vericematematica = ['11', '12', '13', '14', '15', '16', '17',
                            '21', '22', '23', '24', '25', '26', '27',
                            '31', '32', '33', '34', '35', '36',
                            '41', '42', '43', '44', '45', '46',
                            '51', '52', '53', '54', '55', '56', '57',
                            '61', '62', '63', '64', '65', '66', '67',
                            '71', '72', '73', '74', '75', '76', '77',
                            '81', '82', '83', '84', '85', '86', '87']
        self.arestamatematica = ['11-21', '11-22', '13-22', '16-26',
                            '21-31', '22-32', '12-34',
                            '21-41', '23-41', '23-42', '32-42', '36-43', '34-44', '27-45',
                            '33-51', '12-52', '32-53', '44-54', '44-55',
                            '51-61', '52-62', '32-63', '54-64', '46-65',
                            '42-71', '22-72', '41-73', '42-73', '64-74', '65-75',
                            '62-81', '75-82', '32-83', '74-84',
                            '44-57', '57-67', '67-77', '77-87']
        for i in self.vericematematica:
            self.matematica.adiciona_vertice(i)
        for i in self.arestamatematica:
            self.matematica.adiciona_aresta(i)

        # FISICA
        self.fisica = Grafo([], [])
        self.verticefisica = ['11', '12', '13', '14', '15', '16', '17',
                         '21', '22', '23', '24', '25', '26', '27',
                         '31', '32', '33', '34', '35', '36', '37',
                         '41', '42', '43', '44', '45', '46',
                         '51', '52', '53', '54', '55', '56', '57',
                         '61', '62', '63', '64', '65', '66', '68',
                         '71', '72', '73', '74', '75', '76',
                         '81', '82', '83', '84', '85', '86']
        self.arestafisica = ['11-21', '12-21', '11-22', '12-22', '12-23', '12-14', '14-24', '15-25',
                        '21-31', '23-31', '21-32', '22-32', '23-33',
                        '31-41', '31-42', '32-42', '33-45', '31-46',
                        '41-51', '45-51', '41-52', '42-52', '45-53', '31-54', '43-55',
                        '51-61', '51-62', '52-62', '21-63', '53-63', '51-64', '56-66',
                        '61-71', '41-72', '45-72', '66-73', '31-74', '43-74',
                        '65-81', '74-82', '73-83', '54-84', '71-84', '16-85', '25-85',
                        '21-57', '43-57', '31-68', '57-68', '41-76', '68-76', '51-83', '76-83']
        for i in self.verticefisica:
            self.fisica.adiciona_vertice(i)
        for i in self.arestafisica:
            self.fisica.adiciona_aresta(i)

        # LETRAS
        self.letras = Grafo([], [])
        self.verticesletras = ['11', '12', '13', '14', '15', '16', '17',
                          '21', '22', '23', '24', '25', '26', '27',
                          '31', '32', '33', '34', '35', '36', '37',
                          '41', '42', '43', '44', '45', '46', '47',
                          '51', '52', '53', '54', '55', '56', '57',
                          '61', '62', '63', '64', '65', '66', '67', '68',
                          '71', '72', '73', '74', '75', '76', '77', '78',
                          '81', '82', '83', '84', '85', '86', '87', '88']
        self.arestasletras = ['11-21', '11-22', '12-23', '12-25', '17-26',
                         '21-31', '21-32', '21-33', '24-34', '25-35',
                         '31-41', '33-42', '25-43', '25-44', '36-44', '23-46', '35-46', '37-47',
                         '31-51', '35-52', '13-53', '45-54', '35-55', '22-56', '37-57',
                         '31-61', '31-62', '35-63', '54-64', '37-67', '54-68',
                         '31-71', '31-72', '31-73', '64-74', '35-75', '45-76', '27-77', '53-77', '64-78', '68-78',
                         '17-83', '74-84', '77-87', '74-88', '78-88']
        for i in self.verticesletras:
            self.letras.adiciona_vertice(i)
        for i in self.arestasletras:
            self.letras.adiciona_aresta(i)


    def testa_khan(self):
        self.assertEqual(self.engenhariadacomputacao.kahn(),['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '41', '42', '43', '44', '45', '51', '52', '53', '54', '55', '61', '62', '63', '64', '65', '71', '72', '73', '74', '75', '81', '82', '83', '84', '85', '91', '92', '93', '94', '95', '101', '102', '103'])
        self.assertEqual(self.telematica.kahn(),['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '47', '51', '52', '53', '54', '55', '56', '61', '62', '63', '64', '65'])
        self.assertEqual(self.contrucaoedificios.kahn(),['11', '12', '13', '14', '15', '16', '17', '18', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '37', '38', '41', '42', '43', '44', '45', '46', '47', '51', '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '66', '67', '68', '71'])
        self.assertEqual(self.matematica.kahn(),['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '41', '42', '43', '44', '45', '46', '51', '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '66', '67', '71', '72', '73', '74', '75', '76', '77', '81', '82', '83', '84', '85', '86', '87'])
        self.assertEqual(self.fisica.kahn(),['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '51', '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '66', '68', '71', '72', '73', '74', '75', '76', '81', '82', '83', '84', '85', '86'])
        self.assertEqual(self.letras.kahn(),['11', '12', '13', '14', '15', '16', '17', '21', '22', '23', '24', '25', '26', '27', '31', '32', '33', '34', '35', '36', '37', '41', '42', '43', '44', '45', '46', '47', '51', '52', '53', '54', '55', '56', '57', '61', '62', '63', '64', '65', '66', '67', '68', '71', '72', '73', '74', '75', '76', '77', '78', '81', '82', '83', '84', '85', '86', '87', '88'])

    def testa_dfs(self):
        self.assertEqual(self.engenhariadacomputacao.dfs(),['103', '102', '101', '95', '94', '93', '92', '91', '85', '84', '82', '81', '75', '74', '74', '83', '92', '103', '73', '72', '71', '65', '64', '63', '62', '61', '55', '54', '53', '52', '51', '45', '44', '43', '42', '41', '36', '33', '32', '31', '27', '23', '22', '17', '16', '16', '26', '36', '45', '15', '15', '35', '15', '34', '15', '25', '15', '24', '14', '14', '35', '14', '34', '63', '73', '82', '14', '25', '14', '24', '72', '54', '81', '53', '44', '93', '55', '65', '43', '62', '33', '13', '12', '11', '11', '21', '41', '31', '64', '52', '75', '85', '51', '61', '94', '84'])
        self.assertEqual(self.telematica.dfs(),['65', '64', '63', '62', '61', '56', '55', '54', '53', '52', '51', '47', '46', '45', '44', '43', '42', '41', '37', '36', '33', '32', '31', '27', '25', '25', '35', '25', '34', '17', '16', '16', '26', '32', '43', '16', '23', '16', '22', '15', '14', '13', '13', '24', '12', '12', '23', '12', '22', '33', '45', '44', '54', '53', '62', '11', '11', '21', '46', '36', '31', '42', '41', '55', '52', '51'])
        self.assertEqual(self.contrucaoedificios.dfs(),['68', '67', '65', '64', '63', '62', '61', '57', '56', '55', '54', '53', '52', '51', '47', '46', '45', '44', '43', '42', '41', '38', '37', '36', '35', '33', '32', '31', '22', '71', '22', '66', '18', '17', '17', '27', '17', '26', '36', '17', '24', '16', '15', '15', '34', '15', '25', '15', '21', '47', '54', '42', '41', '33', '32', '55', '53', '46', '56', '52', '14', '14', '23', '37', '35', '45', '64', '51', '43', '13', '71', '12', '11', '11', '43', '57', '67', '62', '11', '24', '38'])
        self.assertEqual(self.matematica.dfs(),['87', '86', '85', '84', '83', '82', '81', '77', '76', '75', '74', '73', '72', '71', '67', '66', '64', '63', '62', '61', '57', '56', '55', '54', '53', '46', '46', '65', '75', '82', '44', '42', '41', '36', '36', '43', '35', '33', '33', '51', '61', '32', '31', '27', '27', '45', '25', '24', '23', '17', '16', '16', '26', '15', '14', '13', '13', '22', '12', '12', '52', '62', '81', '12', '34', '44', '57', '67', '77', '87', '55', '54', '64', '74', '84', '11', '11', '22', '72', '32', '83', '63', '53', '42', '71', '11', '21', '41', '73', '31'])
        self.assertEqual(self.fisica.dfs(),['86', '85', '84', '83', '82', '76', '75', '74', '73', '72', '71', '68', '65', '65', '81', '64', '63', '62', '61', '57', '56', '56', '66', '73', '54', '53', '52', '51', '46', '45', '44', '43', '43', '55', '42', '41', '37', '36', '35', '34', '33', '32', '31', '27', '26', '24', '17', '16', '15', '15', '25', '85', '13', '12', '12', '23', '33', '45', '53', '12', '22', '12', '21', '12', '14', '24', '11', '11', '22', '11', '21', '63', '57', '32', '31', '74', '82', '68', '54', '46', '42', '41', '76', '72', '52', '51', '83', '64', '62', '61', '71', '84'])
        self.assertEqual(self.letras.dfs(),['88', '87', '86', '85', '84', '82', '81', '78', '77', '75', '74', '73', '72', '71', '68', '66', '65', '64', '63', '62', '61', '56', '55', '52', '51', '46', '45', '45', '76', '45', '54', '68', '64', '78', '74', '88', '84', '44', '43', '42', '41', '37', '37', '67', '37', '57', '37', '47', '36', '35', '33', '32', '31', '27', '24', '24', '34', '17', '17', '83', '17', '26', '16', '15', '14', '13', '13', '53', '77', '87', '12', '12', '25', '44', '43', '35', '75', '63', '55', '52', '12', '23', '46', '11', '11', '22', '56', '11', '21', '33', '42', '32', '31', '73', '72', '71', '62', '61', '51', '41'])